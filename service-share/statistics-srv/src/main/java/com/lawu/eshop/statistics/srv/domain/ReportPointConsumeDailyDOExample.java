package com.lawu.eshop.statistics.srv.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ReportPointConsumeDailyDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public ReportPointConsumeDailyDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMemberPointIsNull() {
            addCriterion("member_point is null");
            return (Criteria) this;
        }

        public Criteria andMemberPointIsNotNull() {
            addCriterion("member_point is not null");
            return (Criteria) this;
        }

        public Criteria andMemberPointEqualTo(BigDecimal value) {
            addCriterion("member_point =", value, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointNotEqualTo(BigDecimal value) {
            addCriterion("member_point <>", value, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointGreaterThan(BigDecimal value) {
            addCriterion("member_point >", value, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("member_point >=", value, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointLessThan(BigDecimal value) {
            addCriterion("member_point <", value, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointLessThanOrEqualTo(BigDecimal value) {
            addCriterion("member_point <=", value, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointIn(List<BigDecimal> values) {
            addCriterion("member_point in", values, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointNotIn(List<BigDecimal> values) {
            addCriterion("member_point not in", values, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("member_point between", value1, value2, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMemberPointNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("member_point not between", value1, value2, "memberPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointIsNull() {
            addCriterion("merchant_point is null");
            return (Criteria) this;
        }

        public Criteria andMerchantPointIsNotNull() {
            addCriterion("merchant_point is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantPointEqualTo(BigDecimal value) {
            addCriterion("merchant_point =", value, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointNotEqualTo(BigDecimal value) {
            addCriterion("merchant_point <>", value, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointGreaterThan(BigDecimal value) {
            addCriterion("merchant_point >", value, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("merchant_point >=", value, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointLessThan(BigDecimal value) {
            addCriterion("merchant_point <", value, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointLessThanOrEqualTo(BigDecimal value) {
            addCriterion("merchant_point <=", value, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointIn(List<BigDecimal> values) {
            addCriterion("merchant_point in", values, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointNotIn(List<BigDecimal> values) {
            addCriterion("merchant_point not in", values, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("merchant_point between", value1, value2, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andMerchantPointNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("merchant_point not between", value1, value2, "merchantPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointIsNull() {
            addCriterion("total_point is null");
            return (Criteria) this;
        }

        public Criteria andTotalPointIsNotNull() {
            addCriterion("total_point is not null");
            return (Criteria) this;
        }

        public Criteria andTotalPointEqualTo(BigDecimal value) {
            addCriterion("total_point =", value, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointNotEqualTo(BigDecimal value) {
            addCriterion("total_point <>", value, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointGreaterThan(BigDecimal value) {
            addCriterion("total_point >", value, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_point >=", value, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointLessThan(BigDecimal value) {
            addCriterion("total_point <", value, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_point <=", value, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointIn(List<BigDecimal> values) {
            addCriterion("total_point in", values, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointNotIn(List<BigDecimal> values) {
            addCriterion("total_point not in", values, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_point between", value1, value2, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andTotalPointNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_point not between", value1, value2, "totalPoint");
            return (Criteria) this;
        }

        public Criteria andGmtReportIsNull() {
            addCriterion("gmt_report is null");
            return (Criteria) this;
        }

        public Criteria andGmtReportIsNotNull() {
            addCriterion("gmt_report is not null");
            return (Criteria) this;
        }

        public Criteria andGmtReportEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_report =", value, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportNotEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_report <>", value, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportGreaterThan(Date value) {
            addCriterionForJDBCDate("gmt_report >", value, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_report >=", value, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportLessThan(Date value) {
            addCriterionForJDBCDate("gmt_report <", value, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("gmt_report <=", value, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_report in", values, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportNotIn(List<Date> values) {
            addCriterionForJDBCDate("gmt_report not in", values, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_report between", value1, value2, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtReportNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("gmt_report not between", value1, value2, "gmtReport");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table report_point_consume_daily
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}