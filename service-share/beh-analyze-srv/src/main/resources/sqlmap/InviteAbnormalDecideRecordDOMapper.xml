<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lawu.eshop.beh.analyze.srv.mapper.InviteAbnormalDecideRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_num" jdbcType="VARCHAR" property="userNum" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="is_short_hf" jdbcType="BIT" property="isShortHf" />
    <result column="is_long_hf" jdbcType="BIT" property="isLongHf" />
    <result column="is_many_short_hf" jdbcType="BIT" property="isManyShortHf" />
    <result column="is_many_long_hf" jdbcType="BIT" property="isManyLongHf" />
    <result column="is_one_day_hf" jdbcType="BIT" property="isOneDayHf" />
    <result column="is_early_hf" jdbcType="BIT" property="isEarlyHf" />
    <result column="is_ip_hf" jdbcType="BIT" property="isIpHf" />
    <result column="is_abnormal" jdbcType="BIT" property="isAbnormal" />
    <result column="is_activity_abnormal" jdbcType="BIT" property="isActivityAbnormal" />
    <result column="process_type" jdbcType="TINYINT" property="processType" />
    <result column="is_noticed" jdbcType="BIT" property="isNoticed" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_num, account, type, is_short_hf, is_long_hf, is_many_short_hf, is_many_long_hf, 
    is_one_day_hf, is_early_hf, is_ip_hf, is_abnormal, is_activity_abnormal, process_type, 
    is_noticed, gmt_modified, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invite_abnormal_decide_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from invite_abnormal_decide_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from invite_abnormal_decide_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from invite_abnormal_decide_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invite_abnormal_decide_record (user_num, account, type, 
      is_short_hf, is_long_hf, is_many_short_hf, 
      is_many_long_hf, is_one_day_hf, is_early_hf, 
      is_ip_hf, is_abnormal, is_activity_abnormal, 
      process_type, is_noticed, gmt_modified, 
      gmt_create)
    values (#{userNum,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{isShortHf,jdbcType=BIT}, #{isLongHf,jdbcType=BIT}, #{isManyShortHf,jdbcType=BIT}, 
      #{isManyLongHf,jdbcType=BIT}, #{isOneDayHf,jdbcType=BIT}, #{isEarlyHf,jdbcType=BIT}, 
      #{isIpHf,jdbcType=BIT}, #{isAbnormal,jdbcType=BIT}, #{isActivityAbnormal,jdbcType=BIT}, 
      #{processType,jdbcType=TINYINT}, #{isNoticed,jdbcType=BIT}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invite_abnormal_decide_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userNum != null">
        user_num,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="isShortHf != null">
        is_short_hf,
      </if>
      <if test="isLongHf != null">
        is_long_hf,
      </if>
      <if test="isManyShortHf != null">
        is_many_short_hf,
      </if>
      <if test="isManyLongHf != null">
        is_many_long_hf,
      </if>
      <if test="isOneDayHf != null">
        is_one_day_hf,
      </if>
      <if test="isEarlyHf != null">
        is_early_hf,
      </if>
      <if test="isIpHf != null">
        is_ip_hf,
      </if>
      <if test="isAbnormal != null">
        is_abnormal,
      </if>
      <if test="isActivityAbnormal != null">
        is_activity_abnormal,
      </if>
      <if test="processType != null">
        process_type,
      </if>
      <if test="isNoticed != null">
        is_noticed,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userNum != null">
        #{userNum,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="isShortHf != null">
        #{isShortHf,jdbcType=BIT},
      </if>
      <if test="isLongHf != null">
        #{isLongHf,jdbcType=BIT},
      </if>
      <if test="isManyShortHf != null">
        #{isManyShortHf,jdbcType=BIT},
      </if>
      <if test="isManyLongHf != null">
        #{isManyLongHf,jdbcType=BIT},
      </if>
      <if test="isOneDayHf != null">
        #{isOneDayHf,jdbcType=BIT},
      </if>
      <if test="isEarlyHf != null">
        #{isEarlyHf,jdbcType=BIT},
      </if>
      <if test="isIpHf != null">
        #{isIpHf,jdbcType=BIT},
      </if>
      <if test="isAbnormal != null">
        #{isAbnormal,jdbcType=BIT},
      </if>
      <if test="isActivityAbnormal != null">
        #{isActivityAbnormal,jdbcType=BIT},
      </if>
      <if test="processType != null">
        #{processType,jdbcType=TINYINT},
      </if>
      <if test="isNoticed != null">
        #{isNoticed,jdbcType=BIT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from invite_abnormal_decide_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update invite_abnormal_decide_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userNum != null">
        user_num = #{record.userNum,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.isShortHf != null">
        is_short_hf = #{record.isShortHf,jdbcType=BIT},
      </if>
      <if test="record.isLongHf != null">
        is_long_hf = #{record.isLongHf,jdbcType=BIT},
      </if>
      <if test="record.isManyShortHf != null">
        is_many_short_hf = #{record.isManyShortHf,jdbcType=BIT},
      </if>
      <if test="record.isManyLongHf != null">
        is_many_long_hf = #{record.isManyLongHf,jdbcType=BIT},
      </if>
      <if test="record.isOneDayHf != null">
        is_one_day_hf = #{record.isOneDayHf,jdbcType=BIT},
      </if>
      <if test="record.isEarlyHf != null">
        is_early_hf = #{record.isEarlyHf,jdbcType=BIT},
      </if>
      <if test="record.isIpHf != null">
        is_ip_hf = #{record.isIpHf,jdbcType=BIT},
      </if>
      <if test="record.isAbnormal != null">
        is_abnormal = #{record.isAbnormal,jdbcType=BIT},
      </if>
      <if test="record.isActivityAbnormal != null">
        is_activity_abnormal = #{record.isActivityAbnormal,jdbcType=BIT},
      </if>
      <if test="record.processType != null">
        process_type = #{record.processType,jdbcType=TINYINT},
      </if>
      <if test="record.isNoticed != null">
        is_noticed = #{record.isNoticed,jdbcType=BIT},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update invite_abnormal_decide_record
    set id = #{record.id,jdbcType=BIGINT},
      user_num = #{record.userNum,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=TINYINT},
      is_short_hf = #{record.isShortHf,jdbcType=BIT},
      is_long_hf = #{record.isLongHf,jdbcType=BIT},
      is_many_short_hf = #{record.isManyShortHf,jdbcType=BIT},
      is_many_long_hf = #{record.isManyLongHf,jdbcType=BIT},
      is_one_day_hf = #{record.isOneDayHf,jdbcType=BIT},
      is_early_hf = #{record.isEarlyHf,jdbcType=BIT},
      is_ip_hf = #{record.isIpHf,jdbcType=BIT},
      is_abnormal = #{record.isAbnormal,jdbcType=BIT},
      is_activity_abnormal = #{record.isActivityAbnormal,jdbcType=BIT},
      process_type = #{record.processType,jdbcType=TINYINT},
      is_noticed = #{record.isNoticed,jdbcType=BIT},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update invite_abnormal_decide_record
    <set>
      <if test="userNum != null">
        user_num = #{userNum,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="isShortHf != null">
        is_short_hf = #{isShortHf,jdbcType=BIT},
      </if>
      <if test="isLongHf != null">
        is_long_hf = #{isLongHf,jdbcType=BIT},
      </if>
      <if test="isManyShortHf != null">
        is_many_short_hf = #{isManyShortHf,jdbcType=BIT},
      </if>
      <if test="isManyLongHf != null">
        is_many_long_hf = #{isManyLongHf,jdbcType=BIT},
      </if>
      <if test="isOneDayHf != null">
        is_one_day_hf = #{isOneDayHf,jdbcType=BIT},
      </if>
      <if test="isEarlyHf != null">
        is_early_hf = #{isEarlyHf,jdbcType=BIT},
      </if>
      <if test="isIpHf != null">
        is_ip_hf = #{isIpHf,jdbcType=BIT},
      </if>
      <if test="isAbnormal != null">
        is_abnormal = #{isAbnormal,jdbcType=BIT},
      </if>
      <if test="isActivityAbnormal != null">
        is_activity_abnormal = #{isActivityAbnormal,jdbcType=BIT},
      </if>
      <if test="processType != null">
        process_type = #{processType,jdbcType=TINYINT},
      </if>
      <if test="isNoticed != null">
        is_noticed = #{isNoticed,jdbcType=BIT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update invite_abnormal_decide_record
    set user_num = #{userNum,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      is_short_hf = #{isShortHf,jdbcType=BIT},
      is_long_hf = #{isLongHf,jdbcType=BIT},
      is_many_short_hf = #{isManyShortHf,jdbcType=BIT},
      is_many_long_hf = #{isManyLongHf,jdbcType=BIT},
      is_one_day_hf = #{isOneDayHf,jdbcType=BIT},
      is_early_hf = #{isEarlyHf,jdbcType=BIT},
      is_ip_hf = #{isIpHf,jdbcType=BIT},
      is_abnormal = #{isAbnormal,jdbcType=BIT},
      is_activity_abnormal = #{isActivityAbnormal,jdbcType=BIT},
      process_type = #{processType,jdbcType=TINYINT},
      is_noticed = #{isNoticed,jdbcType=BIT},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.lawu.eshop.beh.analyze.srv.domain.InviteAbnormalDecideRecordDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invite_abnormal_decide_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>