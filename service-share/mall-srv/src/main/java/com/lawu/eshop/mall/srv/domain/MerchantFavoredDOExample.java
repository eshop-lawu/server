package com.lawu.eshop.mall.srv.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MerchantFavoredDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public MerchantFavoredDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMerchantIdIsNull() {
            addCriterion("merchant_id is null");
            return (Criteria) this;
        }

        public Criteria andMerchantIdIsNotNull() {
            addCriterion("merchant_id is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantIdEqualTo(Long value) {
            addCriterion("merchant_id =", value, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdNotEqualTo(Long value) {
            addCriterion("merchant_id <>", value, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdGreaterThan(Long value) {
            addCriterion("merchant_id >", value, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("merchant_id >=", value, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdLessThan(Long value) {
            addCriterion("merchant_id <", value, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdLessThanOrEqualTo(Long value) {
            addCriterion("merchant_id <=", value, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdIn(List<Long> values) {
            addCriterion("merchant_id in", values, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdNotIn(List<Long> values) {
            addCriterion("merchant_id not in", values, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdBetween(Long value1, Long value2) {
            addCriterion("merchant_id between", value1, value2, "merchantId");
            return (Criteria) this;
        }

        public Criteria andMerchantIdNotBetween(Long value1, Long value2) {
            addCriterion("merchant_id not between", value1, value2, "merchantId");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andReachAmountIsNull() {
            addCriterion("reach_amount is null");
            return (Criteria) this;
        }

        public Criteria andReachAmountIsNotNull() {
            addCriterion("reach_amount is not null");
            return (Criteria) this;
        }

        public Criteria andReachAmountEqualTo(BigDecimal value) {
            addCriterion("reach_amount =", value, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountNotEqualTo(BigDecimal value) {
            addCriterion("reach_amount <>", value, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountGreaterThan(BigDecimal value) {
            addCriterion("reach_amount >", value, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("reach_amount >=", value, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountLessThan(BigDecimal value) {
            addCriterion("reach_amount <", value, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("reach_amount <=", value, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountIn(List<BigDecimal> values) {
            addCriterion("reach_amount in", values, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountNotIn(List<BigDecimal> values) {
            addCriterion("reach_amount not in", values, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reach_amount between", value1, value2, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andReachAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("reach_amount not between", value1, value2, "reachAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountIsNull() {
            addCriterion("favored_amount is null");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountIsNotNull() {
            addCriterion("favored_amount is not null");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountEqualTo(BigDecimal value) {
            addCriterion("favored_amount =", value, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountNotEqualTo(BigDecimal value) {
            addCriterion("favored_amount <>", value, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountGreaterThan(BigDecimal value) {
            addCriterion("favored_amount >", value, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("favored_amount >=", value, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountLessThan(BigDecimal value) {
            addCriterion("favored_amount <", value, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("favored_amount <=", value, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountIn(List<BigDecimal> values) {
            addCriterion("favored_amount in", values, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountNotIn(List<BigDecimal> values) {
            addCriterion("favored_amount not in", values, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("favored_amount between", value1, value2, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andFavoredAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("favored_amount not between", value1, value2, "favoredAmount");
            return (Criteria) this;
        }

        public Criteria andDiscountRateIsNull() {
            addCriterion("discount_rate is null");
            return (Criteria) this;
        }

        public Criteria andDiscountRateIsNotNull() {
            addCriterion("discount_rate is not null");
            return (Criteria) this;
        }

        public Criteria andDiscountRateEqualTo(BigDecimal value) {
            addCriterion("discount_rate =", value, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateNotEqualTo(BigDecimal value) {
            addCriterion("discount_rate <>", value, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateGreaterThan(BigDecimal value) {
            addCriterion("discount_rate >", value, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("discount_rate >=", value, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateLessThan(BigDecimal value) {
            addCriterion("discount_rate <", value, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("discount_rate <=", value, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateIn(List<BigDecimal> values) {
            addCriterion("discount_rate in", values, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateNotIn(List<BigDecimal> values) {
            addCriterion("discount_rate not in", values, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("discount_rate between", value1, value2, "discountRate");
            return (Criteria) this;
        }

        public Criteria andDiscountRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("discount_rate not between", value1, value2, "discountRate");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeIsNull() {
            addCriterion("valid_week_time is null");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeIsNotNull() {
            addCriterion("valid_week_time is not null");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeEqualTo(String value) {
            addCriterion("valid_week_time =", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeNotEqualTo(String value) {
            addCriterion("valid_week_time <>", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeGreaterThan(String value) {
            addCriterion("valid_week_time >", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeGreaterThanOrEqualTo(String value) {
            addCriterion("valid_week_time >=", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeLessThan(String value) {
            addCriterion("valid_week_time <", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeLessThanOrEqualTo(String value) {
            addCriterion("valid_week_time <=", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeLike(String value) {
            addCriterion("valid_week_time like", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeNotLike(String value) {
            addCriterion("valid_week_time not like", value, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeIn(List<String> values) {
            addCriterion("valid_week_time in", values, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeNotIn(List<String> values) {
            addCriterion("valid_week_time not in", values, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeBetween(String value1, String value2) {
            addCriterion("valid_week_time between", value1, value2, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidWeekTimeNotBetween(String value1, String value2) {
            addCriterion("valid_week_time not between", value1, value2, "validWeekTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeIsNull() {
            addCriterion("valid_day_begin_time is null");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeIsNotNull() {
            addCriterion("valid_day_begin_time is not null");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeEqualTo(String value) {
            addCriterion("valid_day_begin_time =", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeNotEqualTo(String value) {
            addCriterion("valid_day_begin_time <>", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeGreaterThan(String value) {
            addCriterion("valid_day_begin_time >", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeGreaterThanOrEqualTo(String value) {
            addCriterion("valid_day_begin_time >=", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeLessThan(String value) {
            addCriterion("valid_day_begin_time <", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeLessThanOrEqualTo(String value) {
            addCriterion("valid_day_begin_time <=", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeLike(String value) {
            addCriterion("valid_day_begin_time like", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeNotLike(String value) {
            addCriterion("valid_day_begin_time not like", value, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeIn(List<String> values) {
            addCriterion("valid_day_begin_time in", values, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeNotIn(List<String> values) {
            addCriterion("valid_day_begin_time not in", values, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeBetween(String value1, String value2) {
            addCriterion("valid_day_begin_time between", value1, value2, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayBeginTimeNotBetween(String value1, String value2) {
            addCriterion("valid_day_begin_time not between", value1, value2, "validDayBeginTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeIsNull() {
            addCriterion("valid_day_end_time is null");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeIsNotNull() {
            addCriterion("valid_day_end_time is not null");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeEqualTo(String value) {
            addCriterion("valid_day_end_time =", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeNotEqualTo(String value) {
            addCriterion("valid_day_end_time <>", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeGreaterThan(String value) {
            addCriterion("valid_day_end_time >", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeGreaterThanOrEqualTo(String value) {
            addCriterion("valid_day_end_time >=", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeLessThan(String value) {
            addCriterion("valid_day_end_time <", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeLessThanOrEqualTo(String value) {
            addCriterion("valid_day_end_time <=", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeLike(String value) {
            addCriterion("valid_day_end_time like", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeNotLike(String value) {
            addCriterion("valid_day_end_time not like", value, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeIn(List<String> values) {
            addCriterion("valid_day_end_time in", values, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeNotIn(List<String> values) {
            addCriterion("valid_day_end_time not in", values, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeBetween(String value1, String value2) {
            addCriterion("valid_day_end_time between", value1, value2, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andValidDayEndTimeNotBetween(String value1, String value2) {
            addCriterion("valid_day_end_time not between", value1, value2, "validDayEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeIsNull() {
            addCriterion("entire_begin_time is null");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeIsNotNull() {
            addCriterion("entire_begin_time is not null");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeEqualTo(Date value) {
            addCriterionForJDBCDate("entire_begin_time =", value, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("entire_begin_time <>", value, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("entire_begin_time >", value, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("entire_begin_time >=", value, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeLessThan(Date value) {
            addCriterionForJDBCDate("entire_begin_time <", value, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("entire_begin_time <=", value, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeIn(List<Date> values) {
            addCriterionForJDBCDate("entire_begin_time in", values, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("entire_begin_time not in", values, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("entire_begin_time between", value1, value2, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireBeginTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("entire_begin_time not between", value1, value2, "entireBeginTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeIsNull() {
            addCriterion("entire_end_time is null");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeIsNotNull() {
            addCriterion("entire_end_time is not null");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeEqualTo(Date value) {
            addCriterionForJDBCDate("entire_end_time =", value, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("entire_end_time <>", value, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("entire_end_time >", value, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("entire_end_time >=", value, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeLessThan(Date value) {
            addCriterionForJDBCDate("entire_end_time <", value, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("entire_end_time <=", value, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeIn(List<Date> values) {
            addCriterionForJDBCDate("entire_end_time in", values, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("entire_end_time not in", values, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("entire_end_time between", value1, value2, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andEntireEndTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("entire_end_time not between", value1, value2, "entireEndTime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table merchant_favored
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table merchant_favored
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}