package com.lawu.eshop.activity.srv.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RichPowerTaskRecordDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public RichPowerTaskRecordDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserNumIsNull() {
            addCriterion("user_num is null");
            return (Criteria) this;
        }

        public Criteria andUserNumIsNotNull() {
            addCriterion("user_num is not null");
            return (Criteria) this;
        }

        public Criteria andUserNumEqualTo(String value) {
            addCriterion("user_num =", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumNotEqualTo(String value) {
            addCriterion("user_num <>", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumGreaterThan(String value) {
            addCriterion("user_num >", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumGreaterThanOrEqualTo(String value) {
            addCriterion("user_num >=", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumLessThan(String value) {
            addCriterion("user_num <", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumLessThanOrEqualTo(String value) {
            addCriterion("user_num <=", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumLike(String value) {
            addCriterion("user_num like", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumNotLike(String value) {
            addCriterion("user_num not like", value, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumIn(List<String> values) {
            addCriterion("user_num in", values, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumNotIn(List<String> values) {
            addCriterion("user_num not in", values, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumBetween(String value1, String value2) {
            addCriterion("user_num between", value1, value2, "userNum");
            return (Criteria) this;
        }

        public Criteria andUserNumNotBetween(String value1, String value2) {
            addCriterion("user_num not between", value1, value2, "userNum");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayIsNull() {
            addCriterion("is_binding_alipay is null");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayIsNotNull() {
            addCriterion("is_binding_alipay is not null");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayEqualTo(Boolean value) {
            addCriterion("is_binding_alipay =", value, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayNotEqualTo(Boolean value) {
            addCriterion("is_binding_alipay <>", value, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayGreaterThan(Boolean value) {
            addCriterion("is_binding_alipay >", value, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_binding_alipay >=", value, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayLessThan(Boolean value) {
            addCriterion("is_binding_alipay <", value, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayLessThanOrEqualTo(Boolean value) {
            addCriterion("is_binding_alipay <=", value, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayIn(List<Boolean> values) {
            addCriterion("is_binding_alipay in", values, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayNotIn(List<Boolean> values) {
            addCriterion("is_binding_alipay not in", values, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayBetween(Boolean value1, Boolean value2) {
            addCriterion("is_binding_alipay between", value1, value2, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsBindingAlipayNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_binding_alipay not between", value1, value2, "isBindingAlipay");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthIsNull() {
            addCriterion("is_identity_auth is null");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthIsNotNull() {
            addCriterion("is_identity_auth is not null");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthEqualTo(Boolean value) {
            addCriterion("is_identity_auth =", value, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthNotEqualTo(Boolean value) {
            addCriterion("is_identity_auth <>", value, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthGreaterThan(Boolean value) {
            addCriterion("is_identity_auth >", value, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_identity_auth >=", value, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthLessThan(Boolean value) {
            addCriterion("is_identity_auth <", value, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthLessThanOrEqualTo(Boolean value) {
            addCriterion("is_identity_auth <=", value, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthIn(List<Boolean> values) {
            addCriterion("is_identity_auth in", values, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthNotIn(List<Boolean> values) {
            addCriterion("is_identity_auth not in", values, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthBetween(Boolean value1, Boolean value2) {
            addCriterion("is_identity_auth between", value1, value2, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsIdentityAuthNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_identity_auth not between", value1, value2, "isIdentityAuth");
            return (Criteria) this;
        }

        public Criteria andIsLoginIsNull() {
            addCriterion("is_login is null");
            return (Criteria) this;
        }

        public Criteria andIsLoginIsNotNull() {
            addCriterion("is_login is not null");
            return (Criteria) this;
        }

        public Criteria andIsLoginEqualTo(Boolean value) {
            addCriterion("is_login =", value, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginNotEqualTo(Boolean value) {
            addCriterion("is_login <>", value, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginGreaterThan(Boolean value) {
            addCriterion("is_login >", value, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_login >=", value, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginLessThan(Boolean value) {
            addCriterion("is_login <", value, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginLessThanOrEqualTo(Boolean value) {
            addCriterion("is_login <=", value, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginIn(List<Boolean> values) {
            addCriterion("is_login in", values, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginNotIn(List<Boolean> values) {
            addCriterion("is_login not in", values, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginBetween(Boolean value1, Boolean value2) {
            addCriterion("is_login between", value1, value2, "isLogin");
            return (Criteria) this;
        }

        public Criteria andIsLoginNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_login not between", value1, value2, "isLogin");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountIsNull() {
            addCriterion("friend_invite_count is null");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountIsNotNull() {
            addCriterion("friend_invite_count is not null");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountEqualTo(Integer value) {
            addCriterion("friend_invite_count =", value, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountNotEqualTo(Integer value) {
            addCriterion("friend_invite_count <>", value, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountGreaterThan(Integer value) {
            addCriterion("friend_invite_count >", value, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("friend_invite_count >=", value, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountLessThan(Integer value) {
            addCriterion("friend_invite_count <", value, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountLessThanOrEqualTo(Integer value) {
            addCriterion("friend_invite_count <=", value, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountIn(List<Integer> values) {
            addCriterion("friend_invite_count in", values, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountNotIn(List<Integer> values) {
            addCriterion("friend_invite_count not in", values, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountBetween(Integer value1, Integer value2) {
            addCriterion("friend_invite_count between", value1, value2, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andFriendInviteCountNotBetween(Integer value1, Integer value2) {
            addCriterion("friend_invite_count not between", value1, value2, "friendInviteCount");
            return (Criteria) this;
        }

        public Criteria andGameCountIsNull() {
            addCriterion("game_count is null");
            return (Criteria) this;
        }

        public Criteria andGameCountIsNotNull() {
            addCriterion("game_count is not null");
            return (Criteria) this;
        }

        public Criteria andGameCountEqualTo(Integer value) {
            addCriterion("game_count =", value, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountNotEqualTo(Integer value) {
            addCriterion("game_count <>", value, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountGreaterThan(Integer value) {
            addCriterion("game_count >", value, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("game_count >=", value, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountLessThan(Integer value) {
            addCriterion("game_count <", value, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountLessThanOrEqualTo(Integer value) {
            addCriterion("game_count <=", value, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountIn(List<Integer> values) {
            addCriterion("game_count in", values, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountNotIn(List<Integer> values) {
            addCriterion("game_count not in", values, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountBetween(Integer value1, Integer value2) {
            addCriterion("game_count between", value1, value2, "gameCount");
            return (Criteria) this;
        }

        public Criteria andGameCountNotBetween(Integer value1, Integer value2) {
            addCriterion("game_count not between", value1, value2, "gameCount");
            return (Criteria) this;
        }

        public Criteria andAdCountIsNull() {
            addCriterion("ad_count is null");
            return (Criteria) this;
        }

        public Criteria andAdCountIsNotNull() {
            addCriterion("ad_count is not null");
            return (Criteria) this;
        }

        public Criteria andAdCountEqualTo(Integer value) {
            addCriterion("ad_count =", value, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountNotEqualTo(Integer value) {
            addCriterion("ad_count <>", value, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountGreaterThan(Integer value) {
            addCriterion("ad_count >", value, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("ad_count >=", value, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountLessThan(Integer value) {
            addCriterion("ad_count <", value, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountLessThanOrEqualTo(Integer value) {
            addCriterion("ad_count <=", value, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountIn(List<Integer> values) {
            addCriterion("ad_count in", values, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountNotIn(List<Integer> values) {
            addCriterion("ad_count not in", values, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountBetween(Integer value1, Integer value2) {
            addCriterion("ad_count between", value1, value2, "adCount");
            return (Criteria) this;
        }

        public Criteria andAdCountNotBetween(Integer value1, Integer value2) {
            addCriterion("ad_count not between", value1, value2, "adCount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountIsNull() {
            addCriterion("shopping_amount is null");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountIsNotNull() {
            addCriterion("shopping_amount is not null");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountEqualTo(Integer value) {
            addCriterion("shopping_amount =", value, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountNotEqualTo(Integer value) {
            addCriterion("shopping_amount <>", value, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountGreaterThan(Integer value) {
            addCriterion("shopping_amount >", value, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("shopping_amount >=", value, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountLessThan(Integer value) {
            addCriterion("shopping_amount <", value, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountLessThanOrEqualTo(Integer value) {
            addCriterion("shopping_amount <=", value, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountIn(List<Integer> values) {
            addCriterion("shopping_amount in", values, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountNotIn(List<Integer> values) {
            addCriterion("shopping_amount not in", values, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountBetween(Integer value1, Integer value2) {
            addCriterion("shopping_amount between", value1, value2, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andShoppingAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("shopping_amount not between", value1, value2, "shoppingAmount");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rich_power_task_record
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rich_power_task_record
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}