<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lawu.eshop.activity.srv.mapper.RichDiamondDistributionRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="residents" jdbcType="BIGINT" property="residents" />
    <result column="allocated_residents" jdbcType="BIGINT" property="allocatedResidents" />
    <result column="expected_ordinary_allocations" jdbcType="DECIMAL" property="expectedOrdinaryAllocations" />
    <result column="real_ordinary_allocations" jdbcType="DECIMAL" property="realOrdinaryAllocations" />
    <result column="merchant_real_ordinary_allocations" jdbcType="DECIMAL" property="merchantRealOrdinaryAllocations" />
    <result column="lucky_residents" jdbcType="BIGINT" property="luckyResidents" />
    <result column="allocated_lucky_residents" jdbcType="BIGINT" property="allocatedLuckyResidents" />
    <result column="expected_lucky_allocations" jdbcType="DECIMAL" property="expectedLuckyAllocations" />
    <result column="real_luck_allocations" jdbcType="DECIMAL" property="realLuckAllocations" />
    <result column="merchant_real_luck_allocations" jdbcType="DECIMAL" property="merchantRealLuckAllocations" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="gmt_allocations_complete" jdbcType="TIMESTAMP" property="gmtAllocationsComplete" />
    <result column="gmt_grant_complete" jdbcType="TIMESTAMP" property="gmtGrantComplete" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, residents, allocated_residents, expected_ordinary_allocations, real_ordinary_allocations, 
    merchant_real_ordinary_allocations, lucky_residents, allocated_lucky_residents, expected_lucky_allocations, 
    real_luck_allocations, merchant_real_luck_allocations, status, gmt_allocations_complete, 
    gmt_grant_complete, gmt_modified, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rich_diamond_distribution_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from rich_diamond_distribution_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from rich_diamond_distribution_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from rich_diamond_distribution_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rich_diamond_distribution_record (residents, allocated_residents, expected_ordinary_allocations, 
      real_ordinary_allocations, merchant_real_ordinary_allocations, 
      lucky_residents, allocated_lucky_residents, 
      expected_lucky_allocations, real_luck_allocations, 
      merchant_real_luck_allocations, status, gmt_allocations_complete, 
      gmt_grant_complete, gmt_modified, gmt_create
      )
    values (#{residents,jdbcType=BIGINT}, #{allocatedResidents,jdbcType=BIGINT}, #{expectedOrdinaryAllocations,jdbcType=DECIMAL}, 
      #{realOrdinaryAllocations,jdbcType=DECIMAL}, #{merchantRealOrdinaryAllocations,jdbcType=DECIMAL}, 
      #{luckyResidents,jdbcType=BIGINT}, #{allocatedLuckyResidents,jdbcType=BIGINT}, 
      #{expectedLuckyAllocations,jdbcType=DECIMAL}, #{realLuckAllocations,jdbcType=DECIMAL}, 
      #{merchantRealLuckAllocations,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{gmtAllocationsComplete,jdbcType=TIMESTAMP}, 
      #{gmtGrantComplete,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into rich_diamond_distribution_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="residents != null">
        residents,
      </if>
      <if test="allocatedResidents != null">
        allocated_residents,
      </if>
      <if test="expectedOrdinaryAllocations != null">
        expected_ordinary_allocations,
      </if>
      <if test="realOrdinaryAllocations != null">
        real_ordinary_allocations,
      </if>
      <if test="merchantRealOrdinaryAllocations != null">
        merchant_real_ordinary_allocations,
      </if>
      <if test="luckyResidents != null">
        lucky_residents,
      </if>
      <if test="allocatedLuckyResidents != null">
        allocated_lucky_residents,
      </if>
      <if test="expectedLuckyAllocations != null">
        expected_lucky_allocations,
      </if>
      <if test="realLuckAllocations != null">
        real_luck_allocations,
      </if>
      <if test="merchantRealLuckAllocations != null">
        merchant_real_luck_allocations,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtAllocationsComplete != null">
        gmt_allocations_complete,
      </if>
      <if test="gmtGrantComplete != null">
        gmt_grant_complete,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="residents != null">
        #{residents,jdbcType=BIGINT},
      </if>
      <if test="allocatedResidents != null">
        #{allocatedResidents,jdbcType=BIGINT},
      </if>
      <if test="expectedOrdinaryAllocations != null">
        #{expectedOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="realOrdinaryAllocations != null">
        #{realOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="merchantRealOrdinaryAllocations != null">
        #{merchantRealOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="luckyResidents != null">
        #{luckyResidents,jdbcType=BIGINT},
      </if>
      <if test="allocatedLuckyResidents != null">
        #{allocatedLuckyResidents,jdbcType=BIGINT},
      </if>
      <if test="expectedLuckyAllocations != null">
        #{expectedLuckyAllocations,jdbcType=DECIMAL},
      </if>
      <if test="realLuckAllocations != null">
        #{realLuckAllocations,jdbcType=DECIMAL},
      </if>
      <if test="merchantRealLuckAllocations != null">
        #{merchantRealLuckAllocations,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtAllocationsComplete != null">
        #{gmtAllocationsComplete,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtGrantComplete != null">
        #{gmtGrantComplete,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from rich_diamond_distribution_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rich_diamond_distribution_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.residents != null">
        residents = #{record.residents,jdbcType=BIGINT},
      </if>
      <if test="record.allocatedResidents != null">
        allocated_residents = #{record.allocatedResidents,jdbcType=BIGINT},
      </if>
      <if test="record.expectedOrdinaryAllocations != null">
        expected_ordinary_allocations = #{record.expectedOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="record.realOrdinaryAllocations != null">
        real_ordinary_allocations = #{record.realOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="record.merchantRealOrdinaryAllocations != null">
        merchant_real_ordinary_allocations = #{record.merchantRealOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="record.luckyResidents != null">
        lucky_residents = #{record.luckyResidents,jdbcType=BIGINT},
      </if>
      <if test="record.allocatedLuckyResidents != null">
        allocated_lucky_residents = #{record.allocatedLuckyResidents,jdbcType=BIGINT},
      </if>
      <if test="record.expectedLuckyAllocations != null">
        expected_lucky_allocations = #{record.expectedLuckyAllocations,jdbcType=DECIMAL},
      </if>
      <if test="record.realLuckAllocations != null">
        real_luck_allocations = #{record.realLuckAllocations,jdbcType=DECIMAL},
      </if>
      <if test="record.merchantRealLuckAllocations != null">
        merchant_real_luck_allocations = #{record.merchantRealLuckAllocations,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.gmtAllocationsComplete != null">
        gmt_allocations_complete = #{record.gmtAllocationsComplete,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtGrantComplete != null">
        gmt_grant_complete = #{record.gmtGrantComplete,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rich_diamond_distribution_record
    set id = #{record.id,jdbcType=BIGINT},
      residents = #{record.residents,jdbcType=BIGINT},
      allocated_residents = #{record.allocatedResidents,jdbcType=BIGINT},
      expected_ordinary_allocations = #{record.expectedOrdinaryAllocations,jdbcType=DECIMAL},
      real_ordinary_allocations = #{record.realOrdinaryAllocations,jdbcType=DECIMAL},
      merchant_real_ordinary_allocations = #{record.merchantRealOrdinaryAllocations,jdbcType=DECIMAL},
      lucky_residents = #{record.luckyResidents,jdbcType=BIGINT},
      allocated_lucky_residents = #{record.allocatedLuckyResidents,jdbcType=BIGINT},
      expected_lucky_allocations = #{record.expectedLuckyAllocations,jdbcType=DECIMAL},
      real_luck_allocations = #{record.realLuckAllocations,jdbcType=DECIMAL},
      merchant_real_luck_allocations = #{record.merchantRealLuckAllocations,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      gmt_allocations_complete = #{record.gmtAllocationsComplete,jdbcType=TIMESTAMP},
      gmt_grant_complete = #{record.gmtGrantComplete,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rich_diamond_distribution_record
    <set>
      <if test="residents != null">
        residents = #{residents,jdbcType=BIGINT},
      </if>
      <if test="allocatedResidents != null">
        allocated_residents = #{allocatedResidents,jdbcType=BIGINT},
      </if>
      <if test="expectedOrdinaryAllocations != null">
        expected_ordinary_allocations = #{expectedOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="realOrdinaryAllocations != null">
        real_ordinary_allocations = #{realOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="merchantRealOrdinaryAllocations != null">
        merchant_real_ordinary_allocations = #{merchantRealOrdinaryAllocations,jdbcType=DECIMAL},
      </if>
      <if test="luckyResidents != null">
        lucky_residents = #{luckyResidents,jdbcType=BIGINT},
      </if>
      <if test="allocatedLuckyResidents != null">
        allocated_lucky_residents = #{allocatedLuckyResidents,jdbcType=BIGINT},
      </if>
      <if test="expectedLuckyAllocations != null">
        expected_lucky_allocations = #{expectedLuckyAllocations,jdbcType=DECIMAL},
      </if>
      <if test="realLuckAllocations != null">
        real_luck_allocations = #{realLuckAllocations,jdbcType=DECIMAL},
      </if>
      <if test="merchantRealLuckAllocations != null">
        merchant_real_luck_allocations = #{merchantRealLuckAllocations,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="gmtAllocationsComplete != null">
        gmt_allocations_complete = #{gmtAllocationsComplete,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtGrantComplete != null">
        gmt_grant_complete = #{gmtGrantComplete,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update rich_diamond_distribution_record
    set residents = #{residents,jdbcType=BIGINT},
      allocated_residents = #{allocatedResidents,jdbcType=BIGINT},
      expected_ordinary_allocations = #{expectedOrdinaryAllocations,jdbcType=DECIMAL},
      real_ordinary_allocations = #{realOrdinaryAllocations,jdbcType=DECIMAL},
      merchant_real_ordinary_allocations = #{merchantRealOrdinaryAllocations,jdbcType=DECIMAL},
      lucky_residents = #{luckyResidents,jdbcType=BIGINT},
      allocated_lucky_residents = #{allocatedLuckyResidents,jdbcType=BIGINT},
      expected_lucky_allocations = #{expectedLuckyAllocations,jdbcType=DECIMAL},
      real_luck_allocations = #{realLuckAllocations,jdbcType=DECIMAL},
      merchant_real_luck_allocations = #{merchantRealLuckAllocations,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      gmt_allocations_complete = #{gmtAllocationsComplete,jdbcType=TIMESTAMP},
      gmt_grant_complete = #{gmtGrantComplete,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.lawu.eshop.activity.srv.domain.RichDiamondDistributionRecordDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rich_diamond_distribution_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>