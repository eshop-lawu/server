package com.lawu.eshop.game.srv.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class GamePuzzleDifficultyDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public GamePuzzleDifficultyDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Byte value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Byte value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Byte value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Byte value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Byte value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Byte> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Byte> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Byte value1, Byte value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andCoefficientIsNull() {
            addCriterion("coefficient is null");
            return (Criteria) this;
        }

        public Criteria andCoefficientIsNotNull() {
            addCriterion("coefficient is not null");
            return (Criteria) this;
        }

        public Criteria andCoefficientEqualTo(Integer value) {
            addCriterion("coefficient =", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientNotEqualTo(Integer value) {
            addCriterion("coefficient <>", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientGreaterThan(Integer value) {
            addCriterion("coefficient >", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientGreaterThanOrEqualTo(Integer value) {
            addCriterion("coefficient >=", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientLessThan(Integer value) {
            addCriterion("coefficient <", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientLessThanOrEqualTo(Integer value) {
            addCriterion("coefficient <=", value, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientIn(List<Integer> values) {
            addCriterion("coefficient in", values, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientNotIn(List<Integer> values) {
            addCriterion("coefficient not in", values, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientBetween(Integer value1, Integer value2) {
            addCriterion("coefficient between", value1, value2, "coefficient");
            return (Criteria) this;
        }

        public Criteria andCoefficientNotBetween(Integer value1, Integer value2) {
            addCriterion("coefficient not between", value1, value2, "coefficient");
            return (Criteria) this;
        }

        public Criteria andSecScoreIsNull() {
            addCriterion("sec_score is null");
            return (Criteria) this;
        }

        public Criteria andSecScoreIsNotNull() {
            addCriterion("sec_score is not null");
            return (Criteria) this;
        }

        public Criteria andSecScoreEqualTo(String value) {
            addCriterion("sec_score =", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreNotEqualTo(String value) {
            addCriterion("sec_score <>", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreGreaterThan(String value) {
            addCriterion("sec_score >", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreGreaterThanOrEqualTo(String value) {
            addCriterion("sec_score >=", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreLessThan(String value) {
            addCriterion("sec_score <", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreLessThanOrEqualTo(String value) {
            addCriterion("sec_score <=", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreLike(String value) {
            addCriterion("sec_score like", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreNotLike(String value) {
            addCriterion("sec_score not like", value, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreIn(List<String> values) {
            addCriterion("sec_score in", values, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreNotIn(List<String> values) {
            addCriterion("sec_score not in", values, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreBetween(String value1, String value2) {
            addCriterion("sec_score between", value1, value2, "secScore");
            return (Criteria) this;
        }

        public Criteria andSecScoreNotBetween(String value1, String value2) {
            addCriterion("sec_score not between", value1, value2, "secScore");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeIsNull() {
            addCriterion("challenge_time is null");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeIsNotNull() {
            addCriterion("challenge_time is not null");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeEqualTo(Integer value) {
            addCriterion("challenge_time =", value, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeNotEqualTo(Integer value) {
            addCriterion("challenge_time <>", value, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeGreaterThan(Integer value) {
            addCriterion("challenge_time >", value, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("challenge_time >=", value, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeLessThan(Integer value) {
            addCriterion("challenge_time <", value, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeLessThanOrEqualTo(Integer value) {
            addCriterion("challenge_time <=", value, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeIn(List<Integer> values) {
            addCriterion("challenge_time in", values, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeNotIn(List<Integer> values) {
            addCriterion("challenge_time not in", values, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeBetween(Integer value1, Integer value2) {
            addCriterion("challenge_time between", value1, value2, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andChallengeTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("challenge_time not between", value1, value2, "challengeTime");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondIsNull() {
            addCriterion("robot_min_second is null");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondIsNotNull() {
            addCriterion("robot_min_second is not null");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondEqualTo(Integer value) {
            addCriterion("robot_min_second =", value, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondNotEqualTo(Integer value) {
            addCriterion("robot_min_second <>", value, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondGreaterThan(Integer value) {
            addCriterion("robot_min_second >", value, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondGreaterThanOrEqualTo(Integer value) {
            addCriterion("robot_min_second >=", value, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondLessThan(Integer value) {
            addCriterion("robot_min_second <", value, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondLessThanOrEqualTo(Integer value) {
            addCriterion("robot_min_second <=", value, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondIn(List<Integer> values) {
            addCriterion("robot_min_second in", values, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondNotIn(List<Integer> values) {
            addCriterion("robot_min_second not in", values, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondBetween(Integer value1, Integer value2) {
            addCriterion("robot_min_second between", value1, value2, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMinSecondNotBetween(Integer value1, Integer value2) {
            addCriterion("robot_min_second not between", value1, value2, "robotMinSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondIsNull() {
            addCriterion("robot_max_second is null");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondIsNotNull() {
            addCriterion("robot_max_second is not null");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondEqualTo(Integer value) {
            addCriterion("robot_max_second =", value, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondNotEqualTo(Integer value) {
            addCriterion("robot_max_second <>", value, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondGreaterThan(Integer value) {
            addCriterion("robot_max_second >", value, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondGreaterThanOrEqualTo(Integer value) {
            addCriterion("robot_max_second >=", value, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondLessThan(Integer value) {
            addCriterion("robot_max_second <", value, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondLessThanOrEqualTo(Integer value) {
            addCriterion("robot_max_second <=", value, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondIn(List<Integer> values) {
            addCriterion("robot_max_second in", values, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondNotIn(List<Integer> values) {
            addCriterion("robot_max_second not in", values, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondBetween(Integer value1, Integer value2) {
            addCriterion("robot_max_second between", value1, value2, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andRobotMaxSecondNotBetween(Integer value1, Integer value2) {
            addCriterion("robot_max_second not between", value1, value2, "robotMaxSecond");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_puzzle_difficulty
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}