package com.lawu.eshop.game.srv.domain;

import java.util.ArrayList;
import java.util.List;

public class GamePointAllotDOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public GamePointAllotDOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGameTypeIsNull() {
            addCriterion("game_type is null");
            return (Criteria) this;
        }

        public Criteria andGameTypeIsNotNull() {
            addCriterion("game_type is not null");
            return (Criteria) this;
        }

        public Criteria andGameTypeEqualTo(Byte value) {
            addCriterion("game_type =", value, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeNotEqualTo(Byte value) {
            addCriterion("game_type <>", value, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeGreaterThan(Byte value) {
            addCriterion("game_type >", value, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("game_type >=", value, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeLessThan(Byte value) {
            addCriterion("game_type <", value, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeLessThanOrEqualTo(Byte value) {
            addCriterion("game_type <=", value, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeIn(List<Byte> values) {
            addCriterion("game_type in", values, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeNotIn(List<Byte> values) {
            addCriterion("game_type not in", values, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeBetween(Byte value1, Byte value2) {
            addCriterion("game_type between", value1, value2, "gameType");
            return (Criteria) this;
        }

        public Criteria andGameTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("game_type not between", value1, value2, "gameType");
            return (Criteria) this;
        }

        public Criteria andAttendCountIsNull() {
            addCriterion("attend_count is null");
            return (Criteria) this;
        }

        public Criteria andAttendCountIsNotNull() {
            addCriterion("attend_count is not null");
            return (Criteria) this;
        }

        public Criteria andAttendCountEqualTo(Integer value) {
            addCriterion("attend_count =", value, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountNotEqualTo(Integer value) {
            addCriterion("attend_count <>", value, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountGreaterThan(Integer value) {
            addCriterion("attend_count >", value, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("attend_count >=", value, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountLessThan(Integer value) {
            addCriterion("attend_count <", value, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountLessThanOrEqualTo(Integer value) {
            addCriterion("attend_count <=", value, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountIn(List<Integer> values) {
            addCriterion("attend_count in", values, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountNotIn(List<Integer> values) {
            addCriterion("attend_count not in", values, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountBetween(Integer value1, Integer value2) {
            addCriterion("attend_count between", value1, value2, "attendCount");
            return (Criteria) this;
        }

        public Criteria andAttendCountNotBetween(Integer value1, Integer value2) {
            addCriterion("attend_count not between", value1, value2, "attendCount");
            return (Criteria) this;
        }

        public Criteria andWinNumIsNull() {
            addCriterion("win_num is null");
            return (Criteria) this;
        }

        public Criteria andWinNumIsNotNull() {
            addCriterion("win_num is not null");
            return (Criteria) this;
        }

        public Criteria andWinNumEqualTo(Integer value) {
            addCriterion("win_num =", value, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumNotEqualTo(Integer value) {
            addCriterion("win_num <>", value, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumGreaterThan(Integer value) {
            addCriterion("win_num >", value, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("win_num >=", value, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumLessThan(Integer value) {
            addCriterion("win_num <", value, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumLessThanOrEqualTo(Integer value) {
            addCriterion("win_num <=", value, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumIn(List<Integer> values) {
            addCriterion("win_num in", values, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumNotIn(List<Integer> values) {
            addCriterion("win_num not in", values, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumBetween(Integer value1, Integer value2) {
            addCriterion("win_num between", value1, value2, "winNum");
            return (Criteria) this;
        }

        public Criteria andWinNumNotBetween(Integer value1, Integer value2) {
            addCriterion("win_num not between", value1, value2, "winNum");
            return (Criteria) this;
        }

        public Criteria andRankStarIsNull() {
            addCriterion("rank_star is null");
            return (Criteria) this;
        }

        public Criteria andRankStarIsNotNull() {
            addCriterion("rank_star is not null");
            return (Criteria) this;
        }

        public Criteria andRankStarEqualTo(String value) {
            addCriterion("rank_star =", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarNotEqualTo(String value) {
            addCriterion("rank_star <>", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarGreaterThan(String value) {
            addCriterion("rank_star >", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarGreaterThanOrEqualTo(String value) {
            addCriterion("rank_star >=", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarLessThan(String value) {
            addCriterion("rank_star <", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarLessThanOrEqualTo(String value) {
            addCriterion("rank_star <=", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarLike(String value) {
            addCriterion("rank_star like", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarNotLike(String value) {
            addCriterion("rank_star not like", value, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarIn(List<String> values) {
            addCriterion("rank_star in", values, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarNotIn(List<String> values) {
            addCriterion("rank_star not in", values, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarBetween(String value1, String value2) {
            addCriterion("rank_star between", value1, value2, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankStarNotBetween(String value1, String value2) {
            addCriterion("rank_star not between", value1, value2, "rankStar");
            return (Criteria) this;
        }

        public Criteria andRankPointIsNull() {
            addCriterion("rank_point is null");
            return (Criteria) this;
        }

        public Criteria andRankPointIsNotNull() {
            addCriterion("rank_point is not null");
            return (Criteria) this;
        }

        public Criteria andRankPointEqualTo(String value) {
            addCriterion("rank_point =", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointNotEqualTo(String value) {
            addCriterion("rank_point <>", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointGreaterThan(String value) {
            addCriterion("rank_point >", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointGreaterThanOrEqualTo(String value) {
            addCriterion("rank_point >=", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointLessThan(String value) {
            addCriterion("rank_point <", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointLessThanOrEqualTo(String value) {
            addCriterion("rank_point <=", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointLike(String value) {
            addCriterion("rank_point like", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointNotLike(String value) {
            addCriterion("rank_point not like", value, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointIn(List<String> values) {
            addCriterion("rank_point in", values, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointNotIn(List<String> values) {
            addCriterion("rank_point not in", values, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointBetween(String value1, String value2) {
            addCriterion("rank_point between", value1, value2, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andRankPointNotBetween(String value1, String value2) {
            addCriterion("rank_point not between", value1, value2, "rankPoint");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_point_allot
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_point_allot
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}